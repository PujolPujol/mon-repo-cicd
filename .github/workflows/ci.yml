name: Build & Push multi-projets séparés

on:
  push:
    paths:
      - 'projet-a/**'
      - 'projet-b/**'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      projet-a: ${{ steps.filter.outputs.projet-a }}
      projet-b: ${{ steps.filter.outputs.projet-b }}
    steps:
      - uses: actions/checkout@v3

      - name: Détection des changements
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            projet-a:
              - 'projet-a/**'
            projet-b:
              - 'projet-b/**'

  build-projet-a:
    needs: detect-changes
    if: needs.detect-changes.outputs.projet-a == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build image projet-a
        run: |
          IMAGE=docker.io/${{ secrets.DOCKER_USERNAME }}/projet-a
          docker build -t $IMAGE projet-a
          docker save $IMAGE > image-projet-a.tar

      - name: Upload Docker image (projet-a)
        uses: actions/upload-artifact@v4
        with:
          name: image-projet-a
          path: image-projet-a.tar

  push-projet-a:
    needs: build-projet-a
    if: needs.detect-changes.outputs.projet-a == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Download Docker image (projet-a)
        uses: actions/download-artifact@v4
        with:
          name: image-projet-a

      - name: Debug – Lister les fichiers
        run: ls -R

      - name: Load image projet-a
        run: docker load -i image-projet-a.tar

      - name: Re-tag image
        run: |
          IMAGE=docker.io/${{ secrets.DOCKER_USERNAME }}/projet-a
          docker tag $(docker images -q | head -n 1) $IMAGE

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push image projet-a
        run: |
          IMAGE=docker.io/${{ secrets.DOCKER_USERNAME }}/projet-a
          docker push $IMAGE


  build-projet-b:
    needs: detect-changes
    if: needs.detect-changes.outputs.projet-b == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build image projet-b
        run: |
          IMAGE=docker.io/${{ secrets.DOCKER_USERNAME }}/projet-b
          docker build -t $IMAGE projet-b
          docker save $IMAGE > image-projet-b.tar

      - name: Upload Docker image (projet-b)
        uses: actions/upload-artifact@v4
        with:
          name: image-projet-b
          path: image-projet-b.tar

  push-projet-b:
    needs: build-projet-b
    if: needs.detect-changes.outputs.projet-b == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Download Docker image (projet-b)
        uses: actions/download-artifact@v4
        with:
          name: image-projet-b

      - name: Load image projet-b
        run: docker load -i image-projet-b.tar

      - name: Re-tag image
        run: |
          IMAGE=docker.io/${{ secrets.DOCKER_USERNAME }}/projet-b
          docker tag $(docker images -q | head -n 1) $IMAGE

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push image projet-b
        run: |
          IMAGE=docker.io/${{ secrets.DOCKER_USERNAME }}/projet-b
          docker push $IMAGE
